# Définissons le niveau de hiérarchie suivant pour le Wild Series:
#     un simple utilisateur peut lire le résumé d’une série.
#     seuls les administrateurs peuvent créer une catégorie.
#     seuls les utilisateurs avec le role "contributeur" peuvent ajouter/modifier des séries.
#     un contributeur ne peut modifier une série que s'il en est l'auteur.
#     un administrateur peut modifier toutes les séries sans exception.

security:
    role_hierarchy:
        ROLE_CONTRIBUTOR: ROLE_USER
        ROLE_ADMIN: ROLE_CONTRIBUTOR
    password_hashers:
        App\Entity\User: 'auto'
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            entry_point: App\Security\AuthenticationEntryPoint
            access_denied_handler: App\Security\AccessDeniedHandler
            lazy: true
            provider: app_user_provider
            # This allows the user to login by submitting a username and password
            # Reference: https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                # The route name that the login form submits to
                check_path: app_security_login
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: app_security_login
                # Secure the login form against CSRF
                # Reference: https://symfony.com/doc/current/security/csrf.html
                enable_csrf: true
                # The page users are redirect to when there is no previous page stored in the
                # session (for example when the users access directly to the login page).
                default_target_path: app_index
            logout:
                path: app_security_logout
                target: app_index
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/program/new, roles: ROLE_CONTRIBUTOR }
        - { path: ^/program/[a-zA-Z_0-9-]+/edit, roles: ROLE_CONTRIBUTOR }
        - { path: ^/category/[a-zA-Z_0-9-]+/edit, roles: ROLE_ADMIN }
        - { path: ^/category/new, roles: ROLE_ADMIN }
        
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"
            cost: 4 # Lowest possible value for bcrypt
            time_cost: 3 # Lowest possible value for argon
            memory_cost: 10 # Lowest possible value for argon
